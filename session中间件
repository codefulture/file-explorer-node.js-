//测试不通过
var connect = require('connect'),users = require('./users');
var server = connect(connect.logger('dev')
	,connect.bodyParser()
	,connect.cookieParser()
	,connect.session({secret:'my app secret'})
	,function(req,res,next){
		if('/' == req.url && req.session.logged_in){
			res.writeHead(200,{'Content-Type':'text/html'});
			res.end('Welconme back,<b>' + req.session.name + '</b>');
		}else{
			next();
		}
	}
	,function(req,res,next){
		if('/' == req.url && 'GET' == req.method){
			res.writeHead(200,{'Content-Type':'text/html'});
			res.end([
				'<form action="/login" method="POST">'
		,'<fieldset>'
		,	'<legend>please log in</legend>'
		,	'<p>User: <input type="text" name="user"></p>'
		,	'<p>Password: <input type="password" name="password"></p>'
		,	'<button>submit</button>'
		,'</fieldset>'
	,'</form>'
			].join(''));
		}else{
			next();
		}
	}
	,function(req,res,next){
		if('/login' == req.url && 'POST' == req.method){
			res.writeHead(200);
			if(!users[req.body.user] || req.body.password !=users[req.body.user].password){
				res.end('Bad username/password');
			}else{
				req.session.logged_in = true;
				req.session.name = users[req.body].name;
				res.end('Authenticated!');
			}
		}else{
			next();
		}
	}
	,function(req,res,next){
		if('/logout' == req.url){
			req.session.logged_in = false;
			res.writeHead(200);
			res.end('Logged out');
		}else{
			next();
		}
	}
	);
//RedisStore（持久化session数据）
var connect = require('connect'),
RedisStore = require('connect-redis')(connect);
server.use(connect.session({store: new RedisStore,secret:'my secret'}))
